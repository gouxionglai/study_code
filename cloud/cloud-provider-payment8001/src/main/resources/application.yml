server:
  port: 8001
  servlet:
    session:
      timeout: 3000m
      persistent: true
    context-path: /api

spring:
  application:
    name: cloud-payment-service
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      #采样取值介于 0到1之间，1则表示全部收集
      probability: 1
  datasource:
    # 当前数据源操作类型
    type: com.alibaba.druid.pool.DruidDataSource
    # mysql驱动类
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: 123456
    druid:
      # 初始化大小，最小，最大
      initial-size: 10
      min-idle: 10
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 6000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 6000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 30000
      validation-query: select 1 from DUAL;
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,slf4j
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
  http:
    encoding:
      force: true
      charset: utf-8
      enabled: true
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 2000MB
  thymeleaf:
    enabled: true
    prefix: classpath:/static/
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: true
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.gxl.study.springcloud.entity
logging:
  level:
    com.gxl.study.springcloud.mapper: debug


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      #defaultZone: http://localhost:7001/eureka/ #单机
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
  instance:
    instance-id: payment8001
    prefer-ip-address: true